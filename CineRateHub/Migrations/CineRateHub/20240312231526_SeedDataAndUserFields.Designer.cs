// <auto-generated />
using System;
using CineRateHub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CineRateHub.Migrations.CineRateHub
{
    [DbContext(typeof(CineRateHubContext))]
    [Migration("20240312231526_SeedDataAndUserFields")]
    partial class SeedDataAndUserFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CineRateHub.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "James Cameron",
                            Genre = "Action",
                            Rating = 7.9m,
                            ReleaseDate = new DateTime(2009, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Avatar"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Zack Snyder",
                            Genre = "Action",
                            Rating = 7.7m,
                            ReleaseDate = new DateTime(2007, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "300"
                        },
                        new
                        {
                            Id = 3,
                            Director = "Martin Scorsese",
                            Genre = "Biography",
                            Rating = 8.2m,
                            ReleaseDate = new DateTime(2013, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Wolf of Wall Street"
                        },
                        new
                        {
                            Id = 4,
                            Director = "Christopher Nolan",
                            Genre = "Adventure",
                            Rating = 8.6m,
                            ReleaseDate = new DateTime(2014, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Interstellar"
                        });
                });

            modelBuilder.Entity("CineRateHub.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 22,
                            Email = "joseferrari17@hotmail.com",
                            Job = "Fullstack Developer",
                            Name = "Jose Carlos Ferrari",
                            Password = "coxinha123"
                        },
                        new
                        {
                            Id = 2,
                            Age = 23,
                            Email = "hernandeszanella@hotmail.com",
                            Job = "Agronomist",
                            Name = "Hernandes Zanella",
                            Password = "coxinha123"
                        },
                        new
                        {
                            Id = 3,
                            Age = 23,
                            Email = "leoaraujo@hotmail.com",
                            Job = "Agronomist",
                            Name = "Leonardo Araujo",
                            Password = "coxinha123"
                        },
                        new
                        {
                            Id = 4,
                            Age = 21,
                            Email = "jucabala123@hotmail.com",
                            Job = "Unemployed",
                            Name = "Juca",
                            Password = "coxinha123"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
